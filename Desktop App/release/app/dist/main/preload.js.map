{"version":3,"file":"preload.js","mappings":"CAAA,SAA2CA,EAAMC,GAChD,GAAsB,iBAAZC,SAA0C,iBAAXC,OACxCA,OAAOD,QAAUD,SACb,GAAqB,mBAAXG,QAAyBA,OAAOC,IAC9CD,OAAO,GAAIH,OACP,CACJ,IAAIK,EAAIL,IACR,IAAI,IAAIM,KAAKD,GAAuB,iBAAZJ,QAAuBA,QAAUF,GAAMO,GAAKD,EAAEC,EACvE,CACA,CATD,CASGC,QAAQ,I,mBCRX,IAAIC,EAAsB,CCA1BA,EAAyBP,IACH,oBAAXQ,QAA0BA,OAAOC,aAC1CC,OAAOC,eAAeX,EAASQ,OAAOC,YAAa,CAAEG,MAAO,WAE7DF,OAAOC,eAAeX,EAAS,aAAc,CAAEY,OAAO,GAAO,G,YCL9D,MAAM,EAA+BC,QAAQ,YCEvCC,EAAkB,CACtBC,YAAa,CACXC,YAAYC,KAAoBC,GAC9B,EAAAH,YAAYI,KAAKF,KAAYC,EAC/B,EACAE,GAAGH,EAAiBI,GAClB,MAAMC,EAAe,CAACC,KAA6BL,IACjDG,KAAQH,GAGV,OAFA,EAAAH,YAAYK,GAAGH,EAASK,GAEjB,KACL,EAAAP,YAAYS,eAAeP,EAASK,EAAa,CAErD,EACAG,KAAKR,EAAiBI,GACpB,EAAAN,YAAYU,KAAKR,GAAS,CAACM,KAAWL,IAASG,KAAQH,IACzD,EACAQ,QAAUR,GAAmB,EAAAH,YAAYI,KAAK,WAAYD,GAC1DS,aAAeT,GACb,EAAAH,YAAYI,KAAK,gBAAiBD,GACpCU,eAAiBC,IACf,EAAAd,YAAYI,KAAK,mBAAoBU,EAAK,EAE5CC,aAAcC,MAAOC,SACN,EAAAjB,YAAYkB,OAAO,gBAAiBD,GAEnDE,aAAcH,SAAUI,UACT,EAAApB,YAAYkB,OAAO,oBAAqBE,K,OAK3D,EAAAC,cAAcC,kBAAkB,WAAYvB,G","sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///webpack/runtime/make namespace object","webpack:///external node-commonjs \"electron\"","webpack:///./src/main/preload.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(global, () => {\nreturn ","// The require scope\nvar __webpack_require__ = {};\n\n","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","import { IpcRendererEvent, contextBridge, ipcRenderer } from 'electron';\r\n\r\nconst electronHandler = {\r\n  ipcRenderer: {\r\n    sendMessage(channel: string, ...args: any) {\r\n      ipcRenderer.send(channel, ...args);\r\n    },\r\n    on(channel: string, func: (...args: any) => void) {\r\n      const subscription = (_event: IpcRendererEvent, ...args: unknown[]) =>\r\n        func(...args);\r\n      ipcRenderer.on(channel, subscription);\r\n\r\n      return () => {\r\n        ipcRenderer.removeListener(channel, subscription);\r\n      };\r\n    },\r\n    once(channel: string, func: (...args: any) => void) {\r\n      ipcRenderer.once(channel, (_event, ...args) => func(...args));\r\n    },\r\n    runJava: (args: string[]) => ipcRenderer.send('run-java', args),\r\n    runFontForge: (args: (string | number)[]) =>\r\n      ipcRenderer.send('run-fontforge', args),\r\n    openFileDialog: (path: string) => {\r\n      ipcRenderer.send('open-file-dialog', path);\r\n    },\r\n    processImage: async (imagePath: string) => {\r\n      return await ipcRenderer.invoke('process-image', imagePath);\r\n    },\r\n    getAssetPath: async (...paths: string[]) => {\r\n      return await ipcRenderer.invoke('get-asset-path', ...paths);\r\n    },\r\n  },\r\n};\r\n\r\ncontextBridge.exposeInMainWorld('electron', electronHandler);\r\n\r\nexport type ElectronHandler = typeof electronHandler;\r\n"],"names":["root","factory","exports","module","define","amd","a","i","global","__webpack_require__","Symbol","toStringTag","Object","defineProperty","value","require","electronHandler","ipcRenderer","sendMessage","channel","args","send","on","func","subscription","_event","removeListener","once","runJava","runFontForge","openFileDialog","path","processImage","async","imagePath","invoke","getAssetPath","paths","contextBridge","exposeInMainWorld"],"sourceRoot":""}