!function(e,r){if("object"==typeof exports&&"object"==typeof module)module.exports=r();else if("function"==typeof define&&define.amd)define([],r);else{var n=r();for(var o in n)("object"==typeof exports?exports:e)[o]=n[o]}}(global,(()=>(()=>{"use strict";var e={r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},r={};e.r(r);const n=require("electron"),o={ipcRenderer:{sendMessage(e,...r){n.ipcRenderer.send(e,...r)},on(e,r){const o=(e,...n)=>r(...n);return n.ipcRenderer.on(e,o),()=>{n.ipcRenderer.removeListener(e,o)}},once(e,r){n.ipcRenderer.once(e,((e,...n)=>r(...n)))},runJava:e=>n.ipcRenderer.send("run-java",e),runFontForge:e=>n.ipcRenderer.send("run-fontforge",e),openFileDialog:e=>{n.ipcRenderer.send("open-file-dialog",e)},processImage:async e=>await n.ipcRenderer.invoke("process-image",e),getAssetPath:async(...e)=>await n.ipcRenderer.invoke("get-asset-path",...e)}};return n.contextBridge.exposeInMainWorld("electron",o),r})()));
//# sourceMappingURL=preload.js.map